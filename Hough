import numpy as np
import cv2

import matplotlib.pyplot as plt

font = cv2.FONT_HERSHEY_SIMPLEX
lower_yellow = np.array([20, 100, 100])  
upper_yellow = np.array([40, 255, 255])  
lower_blue = np.array([110, 100, 100])  
upper_blue = np.array([130, 255, 255])  

cap = cv2.VideoCapture("E:/anaconda3/test4.mp4")  

def draw_lines(img, houghLines, color=[255, 0, 0], thickness=2):
    for line in houghLines:
        for rho,theta in line:
            a = np.cos(theta)
            b = np.sin(theta)
            x0 = a*rho
            y0 = b*rho
            x1 = int(x0 + 1000*(-b))
            y1 = int(y0 + 1000*(a))
            x2 = int(x0 - 1000*(-b))
            y2 = int(y0 - 1000*(a))

            cv2.line(img,(x1,y1),(x2,y2),color,thickness)   
            
def weighted_img(img, initial_img, alpha=0.8, beta=1., u=0.):
    return cv2.addWeighted(initial_img, alpha, img, beta, u) 


#cap = cv2.VideoCapture(0)
if (cap.isOpened()):  
    flag = 1
else:
    flag = 0
num = 0
if (flag):
    while (True):
        ret, frame = cap.read() 
       
        if ret == False:  
            break
        hsv_img = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)
        mask_yellow = cv2.inRange(hsv_img, lower_yellow, upper_yellow)  
        mask_blue = cv2.inRange(hsv_img, lower_blue, upper_blue) 
        mask_yellow1 = cv2.medianBlur(mask_yellow, 7)  
        mask_blue1 = cv2.medianBlur(mask_blue, 7)  
        
        contours,hierarchy  = cv2.findContours(mask_yellow1, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
        contours2,hierarchy2 = cv2.findContours(mask_blue1, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
        
        hull = cv2.convexHull(contours[0])
        hull2 = cv2.convexHull(contours2[0])
        cv2.polylines(frame, [hull], True, (0, 255, 0), 2)
        cv2.polylines(frame, [hull2], True, (0, 255, 0), 2)
        


        ## edge
        img = cv2.Canny(frame,700,800)
        cv2.imshow("1",img)
        
     
       

        ## hough
        rho = 1
        theta = np.pi/180
        threshold = 140
        hough_lines = cv2.HoughLines(img,rho , theta , threshold)
        
        ## return
        img_lines =  np.zeros_like(img)
        draw_lines(img_lines,hough_lines)
        img_lines = weighted_img(img_lines,img)

        plt.figure(figsize=(15,5))
        plt.subplot(1,2,1)
        plt.imshow(frame,cmap="gray")
        plt.title("source",fontsize=12)
        plt.axis("off")
        #plt.subplot(1,3,2)
        #plt.imshow(img_edges,cmap="gray")
        #plt.title("edge",fontsize=12)
        #plt.axis("off")
        plt.subplot(1,2,2)
        plt.imshow(img_lines)
        plt.title("image with hough lines",fontsize=12)
        plt.axis("off")
        plt.show()


        num = num + 1
        cv2.imshow("result", frame)
        cv2.imwrite("imgs/%d.jpg"%num, frame)
        if cv2.waitKey(20) & 0xFF == 27:
            break
cv2.waitKey(0)
cv2.destroyAllWindows()
