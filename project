fps = capture.get(cv.CAP_PROP_FPS)
print(height, width, count, fps)

def process(image, opt=1):
    hsv = cv.cvtColor(image, cv.COLOR_BGR2HSV)
    line = cv.getStructuringElement(cv.MORPH_RECT, (15, 15), (-1, -1))
    mask1 = cv.inRange(hsv, (20, 100, 100), (40, 255, 255))
    mask1 = cv.morphologyEx(mask1, cv.MORPH_OPEN, line)
    mask2 = cv.inRange(hsv, (110, 100, 100), (130, 255, 255))
    mask2 = cv.morphologyEx(mask2, cv.MORPH_OPEN, line)

    contours, hierarchy = cv.findContours(mask1, cv.RETR_EXTERNAL, cv.CHAIN_APPROX_SIMPLE)
    index = -1
    max = 0
    for c in range(len(contours)):
        area = cv.contourArea(contours[c])
        if area > max:
            max = area
            index = c
            
    if index >= 0:
        rect = cv.minAreaRect(contours[index])
        cv.ellipse(image, rect, (255, 0, 0), 2, 8)
        cv.circle(image, (np.int32(rect[0][0]), np.int32(rect[0][1])), 2, (0, 255, 0), 2, 8, 0)
    return image

    contours2, hierarchy2 = cv.findContours(mask2, cv.RETR_EXTERNAL, cv.CHAIN_APPROX_SIMPLE)
    index2 = -1
    max = 0
    
    for c2 in range(len(contours2)):
        area2 = cv.contourArea(contours2[c2])
        if area2 > max:
            max = area2
            index2 = c2
            
    if index2 >= 0:
        rect2 = cv.minAreaRect(contours2[index])
        cv.ellipse(image, rect, (0, 255, 0), 2, 8)
        cv.circle(image, (np.int32(rect[0][0]), np.int32(rect[0][1])), 2, (0, 0, 255), 2, 8, 0)
    return image

# loop
while(True):
    ret, frame = capture.read()
    if ret is True:
        cv.imshow("input", frame)
        result = process(frame)
        cv.imshow("result", result)
        c = cv.waitKey(50)
        print(c)
        if c == 27:  #ESC 
            break
    else:
        break
cv.waitKey(0)
cv.destroyAllWindows()
